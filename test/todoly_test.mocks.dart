// Mocks generated by Mockito 5.3.2 from annotations
// in todoly/test/todoly_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;

import 'package:mockito/mockito.dart' as _i1;
import 'package:sqflite/sqflite.dart' as _i2;
import 'package:todoly/modules/tasks/models/todo_model.dart' as _i3;
import 'package:todoly/modules/tasks/repository/todo_repository_impl.dart'
    as _i6;
import 'package:todoly/services/tasks/local_tasks_service_impl.dart' as _i4;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeDatabase_0 extends _i1.SmartFake implements _i2.Database {
  _FakeDatabase_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeTodoModel_1 extends _i1.SmartFake implements _i3.TodoModel {
  _FakeTodoModel_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeLocalTasksServiceImpl_2 extends _i1.SmartFake
    implements _i4.LocalTasksServiceImpl {
  _FakeLocalTasksServiceImpl_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [LocalTasksServiceImpl].
///
/// See the documentation for Mockito's code generation for more information.
class MockLocalTasksServiceImpl extends _i1.Mock
    implements _i4.LocalTasksServiceImpl {
  MockLocalTasksServiceImpl() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.Database get dba => (super.noSuchMethod(
        Invocation.getter(#dba),
        returnValue: _FakeDatabase_0(
          this,
          Invocation.getter(#dba),
        ),
      ) as _i2.Database);
  @override
  _i2.Database get db => (super.noSuchMethod(
        Invocation.getter(#db),
        returnValue: _FakeDatabase_0(
          this,
          Invocation.getter(#db),
        ),
      ) as _i2.Database);
  @override
  _i5.Future<List<_i3.TodoModel>> fetchData() => (super.noSuchMethod(
        Invocation.method(
          #fetchData,
          [],
        ),
        returnValue: _i5.Future<List<_i3.TodoModel>>.value(<_i3.TodoModel>[]),
      ) as _i5.Future<List<_i3.TodoModel>>);
  @override
  _i5.Future<_i3.TodoModel> insert(_i3.TodoModel? todo) => (super.noSuchMethod(
        Invocation.method(
          #insert,
          [todo],
        ),
        returnValue: _i5.Future<_i3.TodoModel>.value(_FakeTodoModel_1(
          this,
          Invocation.method(
            #insert,
            [todo],
          ),
        )),
      ) as _i5.Future<_i3.TodoModel>);
  @override
  _i5.Future<_i3.TodoModel?> getTodo(int? id) => (super.noSuchMethod(
        Invocation.method(
          #getTodo,
          [id],
        ),
        returnValue: _i5.Future<_i3.TodoModel?>.value(),
      ) as _i5.Future<_i3.TodoModel?>);
  @override
  _i5.Future<int> delete(int? id) => (super.noSuchMethod(
        Invocation.method(
          #delete,
          [id],
        ),
        returnValue: _i5.Future<int>.value(0),
      ) as _i5.Future<int>);
  @override
  _i5.Future<int> update(_i3.TodoModel? todo) => (super.noSuchMethod(
        Invocation.method(
          #update,
          [todo],
        ),
        returnValue: _i5.Future<int>.value(0),
      ) as _i5.Future<int>);
  @override
  _i5.Future<dynamic> close() => (super.noSuchMethod(
        Invocation.method(
          #close,
          [],
        ),
        returnValue: _i5.Future<dynamic>.value(),
      ) as _i5.Future<dynamic>);
}

/// A class which mocks [TodoRepositoryImpl].
///
/// See the documentation for Mockito's code generation for more information.
class MockTodoRepositoryImpl extends _i1.Mock
    implements _i6.TodoRepositoryImpl {
  MockTodoRepositoryImpl() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.LocalTasksServiceImpl get lts => (super.noSuchMethod(
        Invocation.getter(#lts),
        returnValue: _FakeLocalTasksServiceImpl_2(
          this,
          Invocation.getter(#lts),
        ),
      ) as _i4.LocalTasksServiceImpl);
  @override
  _i5.Future<List<_i3.TodoModel>> fetchData() => (super.noSuchMethod(
        Invocation.method(
          #fetchData,
          [],
        ),
        returnValue: _i5.Future<List<_i3.TodoModel>>.value(<_i3.TodoModel>[]),
      ) as _i5.Future<List<_i3.TodoModel>>);
  @override
  _i5.Future<dynamic> close() => (super.noSuchMethod(
        Invocation.method(
          #close,
          [],
        ),
        returnValue: _i5.Future<dynamic>.value(),
      ) as _i5.Future<dynamic>);
  @override
  _i5.Future<int> delete(int? id) => (super.noSuchMethod(
        Invocation.method(
          #delete,
          [id],
        ),
        returnValue: _i5.Future<int>.value(0),
      ) as _i5.Future<int>);
  @override
  _i5.Future<_i3.TodoModel> insert(_i3.TodoModel? todo) => (super.noSuchMethod(
        Invocation.method(
          #insert,
          [todo],
        ),
        returnValue: _i5.Future<_i3.TodoModel>.value(_FakeTodoModel_1(
          this,
          Invocation.method(
            #insert,
            [todo],
          ),
        )),
      ) as _i5.Future<_i3.TodoModel>);
  @override
  _i5.Future<int> update(_i3.TodoModel? todo) => (super.noSuchMethod(
        Invocation.method(
          #update,
          [todo],
        ),
        returnValue: _i5.Future<int>.value(0),
      ) as _i5.Future<int>);
}
